//The difference of (var, let , const)
     ⋗var old js mein tha
     ⋗var function scoped hota hai
     ⋗var added itself to the windows object


     Example:
           //  Var  //
  function a (){
    for(var i = 0; i < 12 ; i++){
        console.log(i);
    }
    console.log(i);
  }

    a();



    ⇒ let, const new js mein tha
     ⋗let btaces scoped hota hai, var apna parent func mein kahi bhi use ho shakta hai.
     ⋗let dosen't add  to the  windows object


                         // let //
        function mod(){
            for(let i = 0; i < 10; i++){
                console.log(i);
            }
        }

        mod();

        (to check this open consol and type (window))
        //var adds itself to the windos object

        var a = 10;

        //let,const dosn't adds to window object
        var b = 12;


// Execuation contex

 ⇒ execuation contex is a container where tha function's code is
 executed and it's created whenever a function is called, it contains
 3 things, variable, functions and lexical environment.


//lexical environment

 ⇒ lexical environment hota hai ek chart jisma ya likha hota hai ke aaka particular
 function ki cheejo ko access kar sakta hai and kinko nahi,
 matlab ki it holds it's scope and scope chain



           //Copy tha values not refrence //

       ⇒ We can copy the value throw using spread operator
       [... variable] it have three dots it will copy the value not pass the refrence

      *Example:>  var a = [1,2,3,4,5];
                  var b = [...a];

                //  a.pop();
                //  a.push(20);
                //  a.shift();
                //  a.unshift(23);
                //  a.splice(1,2)
                console.log(a);
                console.log(b);

             // Truthy and falsy //

 ⇒ js mein kuchh bhi likho vo mainly do prakaar main se kisi ek
 prakaar ko belogn karti hai

 //falsy value ya hai = 0 false undefined null NaN document.all.
 // Or eanka alava sari value Truthy value hoti hai


             // foreach forin do-while //

//forEach:  foreach loop srf array pe chalta hai matlab ki jab bhi tumhaara pass array ho,
tab use main kan aata hai foreach loop.
  ex:
        //  var a = [1, 2, 3, 4, 5, 6, 7, 8, 9 , 10];

        // a.forEach(function(val){
        //      console.log(val+2);
        // })

//forin : forin loop object par loop karna ka liya hota hai.

    example:

    var obj = {name:"pinku", age:20, city:"surat"};

    for(var key in obg){
      console.log(`${key}: ${obj[key]}`);
    }



                  //Callback function //

⇒ Jab bhi koi aisa code jo baad ma chalta hai aap likhoge, kyuki wo code
baad main chalta hai js ko ya pata nahi hota asis code ke compleation
par js ko bataya jaata hai ke wo complet hogaya aur aap use chala sakte ho, ye
bataane ka kaam callback ka hai

          Example:
          var text = "Hello";
          setTimeout(function(){
              console.log(text)
          }, 2000);

⇒Ais code jjo baad ma chalta hai use ham ek function dedate hai ke jab complete
hojaana to ya function chala dena, aur wo function jo hum deta hai wo ek normal
function hi hota hai aur us kahte hai callback function


                // first class function

//js main ek concept hai jiska matlab hota hai ki aap fnc ko
use kar sakte ho as a value.

// In this [ var a = {2, null, undefined, true, false, function()} , object=[{"name:"prks"}] ]
 we can save this also becaus in js a function is a first class function



               //Bahind the scenes of Array //

// In behind the scenes the array is an object

var arr = [1, 2, 4, 5];

// typeof arr  : Check in browser in consol
// Array.isArray([])  : Check in browser in consol
// Array.isArray({})  : Check in browser in consol


                  // How to delete object prop //

var a = {name: "priyansh" , age: 45};

delete a.age;  // This is used to delete an object from variable.

console.log(a);
